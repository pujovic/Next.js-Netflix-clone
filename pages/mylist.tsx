import Banner from "@/components/Banner";
import Header from "@/components/Header";
import Head from "next/head";
import requests from "@/utils/requests";
import { Movie } from "@/typings";
import Row from "@/components/Row";
import Modal from "@/components/Modal";
import { useAppDispatch, useAppSelector } from "@/store/hooks";
import { closeModal } from "@/store/modalSlice";
import { getSession } from "next-auth/react";
import { NextPageContext } from "next";
import useCurrentUser from "@/hooks/useCurrentUser";
import { useEffect, useState } from "react";

interface Props {
  trendingNow: Movie[];
}

const MyList = ({ trendingNow }: Props) => {
  const { showModal } = useAppSelector((state) => state.modal);
  const dispatch = useAppDispatch();
  const { data: user } = useCurrentUser();
  const [favList, setFavList] = useState([]);

  //Checks for favorite movies and set favList state
  useEffect(() => {
    if (user?.favoriteMovies) {
      let favArr: any = [];
      user?.favoriteMovies.forEach((el: string) => favArr.push(JSON.parse(el)));
      setFavList(favArr);
    }
  }, [user]);

  return (
    <>
      <Head>
        <title>Netflix Clone - My List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div
        className={`relative h-screen bg-gradient-to-b from-neutral-900/30 to-neutral-950 ${
          showModal && "h-screen overflow-hidden"
        }`}
      >
        <Header />

        <main className="relative px-4 pb-20 space-y-16 lg:space-y-24 lg:px-12">
          {favList.length > 0 ? (
            <Banner trendingNow={favList} />
          ) : (
            <Banner trendingNow={trendingNow} />
          )}

          <section className="space-y-4 md:space-y-8">
            {favList.length === 0 && (
              <>
                <h2 className="md:text-xl">My List</h2>
                <p className="mb-6 text-orange-500">
                  Your list of favorites is empty. Browse some new movies and TV
                  shows below.
                </p>
              </>
            )}
            {favList.length > 0 ? (
              <Row title="My List" movies={favList} />
            ) : (
              <Row title="Trending Now" movies={trendingNow} />
            )}
          </section>
        </main>
        <Modal visible={showModal} onClose={() => dispatch(closeModal())} />
      </div>
    </>
  );
};

export default MyList;

export const getServerSideProps = async (context: NextPageContext) => {
  //Checks for active session and redirects to login page
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  //Fetches all movie lists and returns them as props
  const trendingNow = await fetch(requests.fetchTrending).then((res) =>
    res.json()
  );

  return {
    props: {
      trendingNow: trendingNow.results,
    },
  };
};
