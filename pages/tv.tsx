import Banner from "@/components/Banner";
import Header from "@/components/Header";
import Head from "next/head";
import requests from "@/utils/requests";
import { Movie } from "@/typings";
import Row from "@/components/Row";
import Modal from "@/components/Modal";
import { useAppDispatch, useAppSelector } from "@/store/hooks";
import { closeModal } from "@/store/modalSlice";
import { getSession } from "next-auth/react";
import { NextPageContext } from "next";

interface Props {
  popularTv: Movie[];
  comedyTv: Movie[];
  dramaTv: Movie[];
  onTheAirTv: Movie[];
}

const Tv = ({ popularTv, comedyTv, dramaTv, onTheAirTv }: Props) => {
  const { showModal } = useAppSelector((state) => state.modal);
  const dispatch = useAppDispatch();

  return (
    <>
      <Head>
        <title>Netflix Clone</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div
        className={`relative h-screen bg-gradient-to-b from-neutral-900/30 to-neutral-950 ${
          showModal && "h-screen overflow-hidden"
        }`}
      >
        <Header />

        <main className="relative px-4 pb-20 space-y-16 lg:space-y-24 lg:px-12">
          <Banner trendingNow={popularTv} />
          <section className="space-y-4 md:space-y-8">
            <Row title="Popular on Netflix" movies={popularTv} />
            <Row title="Comedies" movies={comedyTv} />
            <Row title="Dramas" movies={dramaTv} />
            <Row title="On The Air" movies={onTheAirTv} />
          </section>
        </main>
        <Modal visible={showModal} onClose={() => dispatch(closeModal())} />
      </div>
    </>
  );
};

export default Tv;

export const getServerSideProps = async (context: NextPageContext) => {
  //Checks for active session and redirects to login page
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  //Fetches all movie lists and returns them as props
  const [popularTv, comedyTv, dramaTv, onTheAirTv] = await Promise.all([
    fetch(requests.fetchPopularTv).then((res) => res.json()),
    fetch(requests.fetchComedyTv).then((res) => res.json()),
    fetch(requests.fetchDramaTv).then((res) => res.json()),
    fetch(requests.fetchOnTheAirTv).then((res) => res.json()),
  ]);

  return {
    props: {
      popularTv: popularTv.results,
      comedyTv: comedyTv.results,
      dramaTv: dramaTv.results,
      onTheAirTv: onTheAirTv.results,
    },
  };
};
